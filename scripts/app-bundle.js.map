{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/resources/index.js","src/shared/index.js","src/components/auth/authcomponent.js","src/components/home/homecomponent.js","src/components/profile/profilearticlecomponent.js","src/components/profile/profilecomponent.js","src/components/profile/profilefavoritescomponent.js","src/components/report/reportcomponent.js","src/components/settings/settingscomponent.js","src/components/updatebalance/updatebalance.js","src/resources/elements/accountlist.js","src/resources/elements/accountpreview.js","src/resources/value-converters/date.js","src/resources/value-converters/formathtml.js","src/resources/value-converters/keys.js","src/shared/layouts/footerlayout.js","src/shared/layouts/headerlayout.js","src/shared/models/user.js","src/shared/services/accountservice.js","src/shared/services/apiservice.js","src/shared/services/articleservice.js","src/shared/services/config.js","src/shared/services/jwtservice.js","src/shared/services/profileservice.js","src/shared/services/reportservice.js","src/shared/services/servicehelper.js","src/shared/services/transactionservice.js","src/shared/services/userservice.js","src/shared/state/sharedstate.js"],"names":["App","userService","message","configureRouter","config","router","title","map","route","moduleId","name","attached","debug","testing","configure","aurelia","use","standardConfiguration","feature","plugin","developmentLogging","start","then","setRoot","globalResources","AuthComponent","transactionService","sharedState","controllerFactory","type","username","email","password","errors","errorMsg","roles","controller","createForCurrentScope","ensure","required","minLength","when","auth","on","determineActivationStrategy","replace","activate","params","routeConfig","id","submit","successMsg","credentials","grant_type","attemptAuth","console","log","response","failLogin","Email","Password","ConfirmPassword","confirmPassword","role","Role","selectedRoleId","register","addRole","navigateToRoute","AccountComponent","bindingEngine","accountService","accounts","year","month","currentUser","getBalance","monthString","format","err","ProfileArticleComponent","as","articles","currentPage","limit","articleService","getArticles","queryParams","offset","author","getList","splice","push","totalPages","Array","from","Math","ceil","articlesCount","val","index","setPageTo","pageNumber","ProfileComponent","ps","profileService","get","profile","onToggleFollowing","following","follow","unfollow","ProfileFavoritesComponent","favorited","ReportComponent","reportService","reportdata","labels","lineOptions","display","text","tooltips","mode","intersect","hover","scales","xAxes","gridLines","scaleLabel","labelString","yAxes","ticks","beginAtZero","getReport","isInitialLoading","lineData","datasets","label","data","backgroundColor","borderColor","borderWidth","fill","ctx","chart","myChart","options","success","fail","SettingsComponent","update","logout","purgeAuth","UpdateBalance","transactions","months","excelData","getAllAccounts","getAll","accountList","getAllBtn","forEach","element","failLoading","addTransaction","parseInt","newAmount","transaction","Month","Year","Amount","AccountId","selectedAccountId","save","deleteTransaction","transactionId","destroy","upload","files","disp","document","getElementById","convertTextToArray","innerText","RandD","Canteen","CEOCar","Marketing","ParkingFines","postDate","saveExcelBalanceData","fileLocation","getAsText","window","FileReader","reader","onload","e","result","readAsText","alert","allTextLines","split","lines","i","length","tarr","j","AccountList","AccountPreview","DateValueConverter","toView","value","FormatHtmlValueConverter","KeysValueConverter","Reflect","ownKeys","FooterLayout","HeaderLayout","defaultBindingMode","twoWay","jwtService","activeRoute","routerConfigChanged","newValue","oldValue","User","token","bio","image","AccountService","apiService","qs","ApiService","http","setHeaders","headersConfig","getToken","Headers","path","method","headers","fetch","api_url","stringify","catch","put","body","post","postForLogin","contentType","json","delete","ArticleService","slug","article","favorite","unfavorite","JwtService","localStorage","saveToken","destroyToken","removeItem","ProfileService","ReportService","status","parseError","error","Error","Promise","resolve","reject","TransactionService","UserService","populate","setAuth","user","access_token","isAuthenticated","getUserInfo","info","location","assign","SharedState"],"mappings":";;;;;;;;;;;;;;;;MAIaA,cAAAA,cADZ;AAGC,iBAAYC,WAAZ,EAAyB;AAAA;;AACvB,WAAKC,OAAL,GAAe,cAAf;AACA,WAAKD,WAAL,GAAmBA,WAAnB;AACD;;kBAEDE,2CAAgBC,QAAQC,QAAQ;AAC9BD,aAAOE,KAAP,GAAe,SAAf;AACAF,aAAOG,GAAP,CAAW,CAET,EAACC,OAAO,CAAC,OAAD,CAAR,EAAmBC,UAAU,+BAA7B,EAA8DC,MAAM,OAApE,EAA6EJ,OAAO,SAApF,EAFS,EAGT,EAACE,OAAO,CAAC,UAAD,CAAR,EAAsBC,UAAU,+BAAhC,EAAiEC,MAAK,UAAtE,EAAkFJ,OAAO,SAAzF,EAHS,EAIT,EAACE,OAAO,CAAC,EAAD,EAAK,MAAL,CAAR,EAAsBC,UAAU,+BAAhC,EAAiEC,MAAK,MAAtE,EAA8EJ,OAAO,MAArF,EAJS,EAKT,EAACE,OAAO,CAAC,eAAD,CAAR,EAA2BC,UAAU,wCAArC,EAA+EC,MAAK,eAApF,EAAqGJ,OAAO,eAA5G,EALS,EAMT,EAACE,OAAO,CAAC,SAAD,CAAR,EAAqBC,UAAU,mCAA/B,EAAoEC,MAAK,SAAzE,EAAoFJ,OAAO,SAA3F,EANS,CAAX;;AASA,WAAKD,MAAL,GAAcA,MAAd;AACD;;kBAEDM,+BAAW,CAEV;;;;;;;;;;;oBC3BY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCECC,YAAAA;;;;;;;;;;AAAT,WAASA,SAAT,CAAmBC,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX,EAGGA,OAHH,CAGW,QAHX,EAIGC,MAJH,CAIU,oBAJV;;AAMA,QAAI,sBAAYP,KAAhB,EAAuB;AACrBG,cAAQC,GAAR,CAAYI,kBAAZ;AACD;;AAED,QAAI,sBAAYP,OAAhB,EAAyB;AACvBE,cAAQC,GAAR,CAAYG,MAAZ,CAAmB,iBAAnB;AACD;;AAEDJ,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UClBeT,YAAAA;AAAT,WAASA,SAAT,CAAmBV,MAAnB,EAA2B;AAChCA,WAAOoB,eAAP,CAAuB,CAAC,yBAAD,CAAvB;AACD;;;;;;;;UCFeV,YAAAA;AAAT,WAASA,SAAT,CAAmBV,MAAnB,EAA2B,CAEjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCMYqB,wBAAAA,wBADZ;AAUC,2BAAYC,kBAAZ,EAAgCzB,WAAhC,EAA6C0B,WAA7C,EAA0DtB,MAA1D,EAAkEuB,iBAAlE,EAAqF;AAAA;;AAAA,WARrFC,IAQqF,GAR9E,EAQ8E;AAAA,WAPrFC,QAOqF,GAP1E,EAO0E;AAAA,WANrFC,KAMqF,GAN7E,EAM6E;AAAA,WALrFC,QAKqF,GAL1E,EAK0E;AAAA,WAJrFC,MAIqF,GAJ5E,IAI4E;AAAA,WAHrFC,QAGqF,GAH1E,IAG0E;AAAA,WAFrFC,KAEqF,GAF7E,EAE6E;;AAEnF,WAAKT,kBAAL,GAA0BA,kBAA1B;AACA,WAAKzB,WAAL,GAAmBA,WAAnB;AACA,WAAK0B,WAAL,GAAmBA,WAAnB;AACA,WAAKtB,MAAL,GAAcA,MAAd;AACA,WAAK+B,UAAL,GAAkBR,kBAAkBS,qBAAlB,EAAlB;;AAEA,yCACGC,MADH,CACU,OADV,EACmBC,QADnB,GAC8BR,KAD9B,GAEGO,MAFH,CAEU,UAFV,EAEsBC,QAFtB,GAEiCC,SAFjC,CAE2C,CAF3C,EAGGF,MAHH,CAGU,iBAHV,EAG6BC,QAH7B,GAGwCE,IAHxC,CAG6C,UAACC,IAAD;AAAA,eAAUA,KAAKb,IAAL,KAAc,UAAxB;AAAA,OAH7C,EAIGc,EAJH,CAIM,IAJN;AAKD;;4BAEDC,qEAA8B;AAC5B,aAAO,kCAAmBC,OAA1B;AACD;;4BAEDC,6BAASC,QAAQC,aAAa;AAC5B,WAAKnB,IAAL,GAAYmB,YAAYtC,IAAxB;AACA,WAAKyB,KAAL,GAAa,CACX;AACEzB,cAAM,OADR;AAEEuC,YAAI;AAFN,OADW,EAKX;AACEvC,cAAM,MADR;AAEEuC,YAAI;AAFN,OALW,CAAb;AAUD;;4BAUDC,2BAAS;AAAA;;AACP,WAAKjB,MAAL,GAAc,IAAd;AACA,WAAKC,QAAL,GAAgB,IAAhB;AACA,WAAKiB,UAAL,GAAkB,IAAlB;AACA,UAAI,KAAKtB,IAAL,IAAa,OAAjB,EAA0B;AACxB,YAAMuB,cAAc;AAClBtB,oBAAU,KAAKC,KADG;AAElBC,oBAAU,KAAKA,QAFG;AAGlBqB,sBAAW;AAHO,SAApB;AAKA,aAAKpD,WAAL,CAAiBqD,WAAjB,CAA6BF,WAA7B,EACC9B,IADD,CACM,oBAAY;AAChBiC,kBAAQC,GAAR,CAAYC,QAAZ;AACA,cAAGA,YAAU,8BAAb,EAA6C;AAC3C,kBAAKC,SAAL,GAAiB,IAAjB;AACD,WAFD,MAEO;AACL,kBAAKA,SAAL,GAAiB,0CAAjB;AACD;AACF,SARD,EAQE,eAAO;AACP,gBAAKA,SAAL,GAAiB,0CAAjB;AACD,SAVD;AAWD,OAjBD,MAiBO;AACL,YAAMN,eAAc;AAClBO,iBAAO,KAAK5B,KADM;AAElB6B,oBAAU,KAAK5B,QAFG;AAGlB6B,2BAAiB,KAAKC;AAHJ,SAApB;;AAOA,YAAMC,OAAO;AACXJ,iBAAO,KAAK5B,KADD;AAEXiC,gBAAO,KAAKC;AAFD,SAAb;;AAKA,aAAKhE,WAAL,CAAiBiE,QAAjB,CAA0Bd,YAA1B,EACC9B,IADD,CACM,oBAAY;AAChB,cAAGmC,YAAY,mCAAf,EAAmD;AACjD,kBAAKxD,WAAL,CAAiBkE,OAAjB,CAAyBJ,IAAzB,EACCzC,IADD,CACM,oBAAY;AAChB,kBAAGmC,YAAY,iCAAf,EAAiD;;AAE/C,sBAAKpD,MAAL,CAAY+D,eAAZ,CAA4B,MAA5B;AACD,eAHD,MAGO;AACL,sBAAKlC,QAAL,GAAgBuB,QAAhB;AAED;AACF,aATD;AAWD,WAZD,MAYO;AACL,kBAAKvB,QAAL,GAAgBuB,QAAhB;AAED;AACF,SAlBD;AAoBD;AAEF;;;;0BAhEa;AACZ,YAAI,KAAK5B,IAAL,IAAa,OAAjB,EAA0B;AACxB,iBAAO,KAAKE,KAAL,KAAe,EAAf,IAAqB,KAAKC,QAAL,KAAkB,EAA9C;AACD,SAFD,MAEO;AACL,iBAAO,KAAKD,KAAL,KAAe,EAAf,IAAqB,KAAKC,QAAL,KAAkB,EAAvC,IAA6C,KAAK8B,eAAL,KAAyB,KAAK9B,QAAlF;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCjDUqC,2BAAAA,2BADZ;AAIC,8BAAY1C,WAAZ,EAAyB2C,aAAzB,EAAwCC,cAAxC,EAAwD;AAAA;;AAAA,WAFxDC,QAEwD,GAF7C,EAE6C;;AACtD,WAAK7C,WAAL,GAAmBA,WAAnB;AACA,WAAK2C,aAAL,GAAqBA,aAArB;AACA,WAAKC,cAAL,GAAsBA,cAAtB;AACA,WAAKE,IAAL,GAAY,wBAASA,IAAT,EAAZ;AACA,WAAKC,KAAL,GAAa,wBAASA,KAAT,EAAb;AACD;;+BAED/D,+BAAW;AACT,UAAG,KAAKgB,WAAL,CAAiBgD,WAAjB,CAA6BZ,IAA7B,IAAmC,MAAtC,EAA6C;AAC3C,aAAKa,UAAL,CAAgB,KAAKH,IAArB,EAA2B,KAAKC,KAAhC;AACD;AAEF;;+BAEDE,iCAAWH,MAAMC,OAAO;AAAA;;AACtB,UAAGD,QAAQC,KAAX,EAAkB;AAChB,YAAI3B,SAAS;AACX0B,gBAAMA,IADK;AAEXC,iBAAOA;AAFI,SAAb;;AAKA,aAAKH,cAAL,CAAoBK,UAApB,CAA+B7B,MAA/B,EACGzB,IADH,CACQ,oBAAY;AAChB,gBAAKkD,QAAL,GAAgBf,QAAhB;AACA,gBAAKoB,WAAL,GAAoB,sBAAOH,QAAM,CAAb,EAAgB,IAAhB,EAAsBI,MAAtB,CAA6B,MAA7B,CAApB;AACD,SAJH,EAII,eAAO;AACPvB,kBAAQC,GAAR,CAAYuB,GAAZ;AACD,SANH;AAOD;AAEF;;;;;;;;;;;;;;;;;;;;;MCrCUC,kCAAAA,kCADZ;AAQC,qCAAYC,EAAZ,EAAgB;AAAA;;AAAA,WANhBC,QAMgB,GANL,EAMK;AAAA,WAHhBC,WAGgB,GAHF,CAGE;AAAA,WAFhBC,KAEgB,GAFR,EAEQ;;AACd,WAAKC,cAAL,GAAsBJ,EAAtB;AACD;;sCAEDnC,6BAASC,QAAQC,aAAa;AAC5B,WAAKlB,QAAL,GAAgBiB,OAAOrC,IAAvB;AACA,aAAO,KAAK4E,WAAL,EAAP;AACD;;sCAEDA,qCAAc;AAAA;;AACZ,UAAIC,cAAc;AAChBH,eAAO,KAAKA,KADI;AAEhBI,gBAAQ,KAAKJ,KAAL,IAAc,KAAKD,WAAL,GAAmB,CAAjC,CAFQ;AAGhBM,gBAAQ,KAAK3D;AAHG,OAAlB;AAKA,aAAO,KAAKuD,cAAL,CAAoBK,OAApB,CAA4B,KAA5B,EAAmCH,WAAnC,EACJjE,IADI,CACC,oBAAY;AAAA;;AAChB,cAAK4D,QAAL,CAAcS,MAAd,CAAqB,CAArB;AACA,2BAAKT,QAAL,EAAcU,IAAd,kBAAsBnC,SAASyB,QAA/B;;AAGA,cAAKW,UAAL,GAAkBC,MAAMC,IAAN,CAAW,IAAID,KAAJ,CAAUE,KAAKC,IAAL,CAAUxC,SAASyC,aAAT,GAAyB,MAAKd,KAAxC,CAAV,CAAX,EAAsE,UAACe,GAAD,EAAMC,KAAN;AAAA,iBAAgBA,QAAQ,CAAxB;AAAA,SAAtE,CAAlB;AACD,OAPI,CAAP;AAQD;;sCAEDC,+BAAUC,YAAY;AACpB,WAAKnB,WAAL,GAAmBmB,UAAnB;AACA,WAAKhB,WAAL;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCjCUiB,2BAAAA,2BADZ;AAGC,8BAAY5E,WAAZ,EAAyB6E,EAAzB,EAA6B;AAAA;;AAC3B,WAAK7E,WAAL,GAAmBA,WAAnB;AACA,WAAK8E,cAAL,GAAsBD,EAAtB;AACD;;+BAEDrG,2CAAgBC,QAAQC,QAAQ;AAC9BD,aAAOG,GAAP,CAAW,CACT,EAACC,OAAO,CAAC,EAAD,CAAR,EAAcC,UAAU,4CAAxB,EAAsEC,MAAM,gBAA5E,EAA8FJ,OAAO,SAArG,EADS,EAET,EAACE,OAAO,CAAC,WAAD,CAAR,EAAuBC,UAAU,8CAAjC,EAAiFC,MAAM,kBAAvF,EAA2GJ,OAAO,SAAlH,EAFS,CAAX;;AAKA,WAAKD,MAAL,GAAcA,MAAd;AACD;;+BAEDyC,6BAASC,QAAQC,aAAa;AAAA;;AAC5B,WAAKlB,QAAL,GAAgBiB,OAAOrC,IAAvB;AACA,aAAO,KAAK+F,cAAL,CAAoBC,GAApB,CAAwB,KAAK5E,QAA7B,EACJR,IADI,CACC;AAAA,eAAW,MAAKqF,OAAL,GAAeA,OAA1B;AAAA,OADD,CAAP;AAED;;+BAMDC,iDAAoB;AAClB,WAAKD,OAAL,CAAaE,SAAb,GAAyB,CAAC,KAAKF,OAAL,CAAaE,SAAvC;AACA,UAAI,KAAKF,OAAL,CAAaE,SAAjB,EACE,KAAKJ,cAAL,CAAoBK,MAApB,CAA2B,KAAKH,OAAL,CAAa7E,QAAxC,EADF,KAGE,KAAK2E,cAAL,CAAoBM,QAApB,CAA6B,KAAKJ,OAAL,CAAa7E,QAA1C;AACH;;;;0BAVY;AACX,eAAO,KAAK6E,OAAL,CAAa7E,QAAb,KAA0B,KAAKH,WAAL,CAAiBgD,WAAjB,CAA6B7C,QAA9D;AACD;;;;;;;;;;;;;;;;;;;;;;MC1BUkF,oCAAAA,oCADZ;AAQC,uCAAY/B,EAAZ,EAAgB;AAAA;;AAAA,WANhBC,QAMgB,GANL,EAMK;AAAA,WAHhBC,WAGgB,GAHF,CAGE;AAAA,WAFhBC,KAEgB,GAFR,EAEQ;;AACd,WAAKC,cAAL,GAAsBJ,EAAtB;AACD;;wCAEDnC,6BAASC,QAAQC,aAAa;AAC5B,WAAKlB,QAAL,GAAgBiB,OAAOrC,IAAvB;AACA,aAAO,KAAK4E,WAAL,EAAP;AACD;;wCAEDA,qCAAc;AAAA;;AACZ,UAAIC,cAAc;AAChBH,eAAO,KAAKA,KADI;AAEhBI,gBAAQ,KAAKJ,KAAL,IAAc,KAAKD,WAAL,GAAmB,CAAjC,CAFQ;AAGhB8B,mBAAW,KAAKnF;AAHA,OAAlB;AAKA,aAAO,KAAKuD,cAAL,CAAoBK,OAApB,CAA4B,KAA5B,EAAmCH,WAAnC,EACJjE,IADI,CACC,oBAAY;AAAA;;AAChB,cAAK4D,QAAL,CAAcS,MAAd,CAAqB,CAArB;AACA,2BAAKT,QAAL,EAAcU,IAAd,kBAAsBnC,SAASyB,QAA/B;;AAGA,cAAKW,UAAL,GAAkBC,MAAMC,IAAN,CAAW,IAAID,KAAJ,CAAUE,KAAKC,IAAL,CAAUxC,SAASyC,aAAT,GAAyB,MAAKd,KAAxC,CAAV,CAAX,EAAsE,UAACe,GAAD,EAAMC,KAAN;AAAA,iBAAgBA,QAAQ,CAAxB;AAAA,SAAtE,CAAlB;AACD,OAPI,CAAP;AAQD;;wCAEDC,+BAAUC,YAAY;AACpB,WAAKnB,WAAL,GAAmBmB,UAAnB;AACA,WAAKhB,WAAL;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MC9BU4B,0BAAAA,0BADZ;AAgDC,6BAAYvF,WAAZ,EAAyB2C,aAAzB,EAAwC6C,aAAxC,EAAuD;AAAA;;AAAA,WA9CvDC,UA8CuD,GA9C1C,IA8C0C;AAAA,WA7CvDC,MA6CuD,GA7C9C,CACP,KADO,EACA,KADA,EACO,KADP,EACc,KADd,EACqB,KADrB,EAC4B,KAD5B,EAEP,KAFO,EAEA,KAFA,EAEO,KAFP,EAEc,KAFd,EAEqB,KAFrB,EAE4B,KAF5B,CA6C8C;AAAA,WAtCvDC,WAsCuD,GAtCzC;AACZhH,eAAM;AACJiH,mBAAQ,IADJ;AAEJC,sDAAyC,KAAK/C;AAF1C,SADM;AAKZgD,kBAAU;AACRC,gBAAM,OADE;AAERC,qBAAW;AAFH,SALE;AASZC,eAAO;AACLF,gBAAM,SADD;AAELC,qBAAW;AAFN,SATK;AAaZE,gBAAQ;AACNC,iBAAO,CAAC;AACNC,uBAAW;AACTR,uBAAS;AADA,aADL;AAINS,wBAAY;AACVT,uBAAS,IADC;AAEVU,2BAAa;AAFH;AAJN,WAAD,CADD;AAUNC,iBAAO,CAAC;AACNH,uBAAW;AACTR,uBAAS;AADA,aADL;AAINY,mBAAO;AACLC,2BAAa;AADR,aAJD;AAONJ,wBAAY;AACVT,uBAAS,IADC;AAEVU,2BAAa;AAFH;AAPN,WAAD;AAVD;AAbI,OAsCyC;;AACrD,WAAKtG,WAAL,GAAmBA,WAAnB;AACA,WAAK2C,aAAL,GAAqBA,aAArB;AACA,WAAK6C,aAAL,GAAqBA,aAArB;AACA,WAAK1C,IAAL,GAAY,wBAASA,IAAT,EAAZ;AACD;;8BAED9D,+BAAW;AACT,UAAG,KAAKgB,WAAL,CAAiBgD,WAAjB,CAA6BZ,IAA7B,IAAmC,OAAtC,EAA8C;AAC5C,aAAKsE,SAAL,CAAe,IAAf;AACD;AAEF;;8BAEDA,+BAAUC,kBAAkB;AAAA;;AAC1B,WAAKlB,UAAL,GAAkB,IAAlB;;AAEA,UAAIrE,SAAS;AACX0B,cAAM,KAAKA;AADA,OAAb;;AAKA,WAAK0C,aAAL,CAAmBkB,SAAnB,CAA6BtF,MAA7B,EACGzB,IADH,CACQ,oBAAY;AAChB,cAAK8F,UAAL,GAAkB3D,QAAlB;;AAEA,cAAK8E,QAAL,GAAgB;AACdlB,kBAAQ,MAAKA,MADC;AAEdmB,oBAAU,CACR;AACEC,mBAAO,KADT;AAEEC,kBAAMjF,SAAS,OAAT,CAFR;AAGEkF,6BAAiB,iBAHnB;AAIEC,yBAAa,iBAJf;AAKEC,yBAAa,CALf;AAMEC,kBAAM;AANR,WADQ,EASR;AACEL,mBAAO,SADT;AAEEC,kBAAMjF,SAAS,SAAT,CAFR;AAGEkF,6BAAiB,sBAHnB;AAIEC,yBAAa,oBAJf;AAKEC,yBAAa,CALf;AAMEC,kBAAM;AANR,WATQ,EAiBR;AACEL,mBAAO,WADT;AAEEC,kBAAMjF,SAAS,QAAT,CAFR;AAGEkF,6BAAiB,sBAHnB;AAIEC,yBAAa,iBAJf;AAKEC,yBAAa,CALf;AAMEC,kBAAM;AANR,WAjBQ,EAyBR;AACEL,mBAAO,WADT;AAEEC,kBAAMjF,SAAS,WAAT,CAFR;AAGEkF,6BAAiB,yBAHnB;AAIEC,yBAAa,uBAJf;AAKEC,yBAAa,CALf;AAMEC,kBAAM;AANR,WAzBQ,EAiCR;AACEL,mBAAO,eADT;AAEEC,kBAAMjF,SAAS,cAAT,CAFR;AAGEkF,6BAAiB,yBAHnB;AAIEC,yBAAa,oBAJf;AAKEC,yBAAa,CALf;AAMEC,kBAAM;AANR,WAjCQ;AAFI,SAAhB;;AA8CA,cAAKxB,WAAL,CAAiBhH,KAAjB,CAAuBkH,IAAvB,yCAAgE,MAAK/C,IAArE;AACA,YAAIsE,MAAM,MAAKC,KAAf;;AAEA,YAAIC,UAAU,iBAAUF,GAAV,EAAe;AAC3BlH,gBAAM,MADqB;AAE3B6G,gBAAM,MAAKH,QAFgB;AAG3BW,mBAAS,MAAK5B;AAHa,SAAf,CAAd;AAKA,YAAG,CAACgB,gBAAJ,EAAsB;AACpB,gBAAKa,OAAL,GAAe,sCAAf;AACA,gBAAKC,IAAL,GAAY,IAAZ;AACD;AACF,OA9DH,EA8DI,eAAO;AACP,cAAKD,OAAL,GAAe,IAAf;AACA,cAAKC,IAAL,GAAY,0CAAZ;AACD,OAjEH;AAkED;;;;;;;;;;;;;;;;;;;;;MC1IUC,4BAAAA,4BADZ;AAGC,+BAAYpJ,WAAZ,EAAyB0B,WAAzB,EAAsCtB,MAAtC,EAA8C;AAAA;;AAC5C,WAAKJ,WAAL,GAAmBA,WAAnB;AACA,WAAK0B,WAAL,GAAmBA,WAAnB;AACA,WAAKtB,MAAL,GAAcA,MAAd;AACD;;gCAEDiJ,2BAAS;AACP,WAAKrJ,WAAL,CAAiBqJ,MAAjB,CAAwB,KAAK3H,WAAL,CAAiBgD,WAAzC;AACD;;gCAED4E,2BAAS;AACP,WAAKtJ,WAAL,CAAiBuJ,SAAjB;AACA,WAAKnJ,MAAL,CAAY+D,eAAZ,CAA4B,MAA5B;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCbUqF,wBAAAA,wBADZ;AAmBC,2BAAY/H,kBAAZ,EAAgC6C,cAAhC,EAAgD5C,WAAhD,EAA6D;AAAA;;AAAA,WAjB7D+H,YAiB6D,GAjB9C,EAiB8C;AAAA,WAhB7DC,MAgB6D,GAhBpD,CACP,EAAE1G,IAAI,CAAN,EAASvC,MAAM,SAAf,EADO,EAEP,EAAEuC,IAAI,CAAN,EAASvC,MAAM,UAAf,EAFO,EAGP,EAAEuC,IAAI,CAAN,EAASvC,MAAM,OAAf,EAHO,EAIP,EAAEuC,IAAI,CAAN,EAASvC,MAAM,OAAf,EAJO,EAKP,EAAEuC,IAAI,CAAN,EAASvC,MAAM,KAAf,EALO,EAMP,EAAEuC,IAAI,CAAN,EAASvC,MAAM,MAAf,EANO,EAOP,EAAEuC,IAAI,CAAN,EAASvC,MAAM,MAAf,EAPO,EAQP,EAAEuC,IAAI,CAAN,EAASvC,MAAM,QAAf,EARO,EASP,EAAEuC,IAAI,CAAN,EAASvC,MAAM,WAAf,EATO,EAUP,EAAEuC,IAAI,CAAN,EAASvC,MAAM,SAAf,EAVO,EAWP,EAAEuC,IAAI,EAAN,EAAUvC,MAAM,UAAhB,EAXO,EAYP,EAAEuC,IAAI,EAAN,EAAUvC,MAAM,UAAhB,EAZO,CAgBoD;AAAA,WAF7DkJ,SAE6D,GAFjD,EAEiD;;AAC3D,WAAKlI,kBAAL,GAA0BA,kBAA1B;AACA,WAAK6C,cAAL,GAAsBA,cAAtB;AACA,WAAK5C,WAAL,GAAmBA,WAAnB;AACA,WAAKwH,OAAL,GAAe,KAAf;AACA,WAAKC,IAAL,GAAY,KAAZ;AACA,WAAK3E,IAAL,GAAY,wBAASA,IAAT,EAAZ;AACA,WAAKC,KAAL,GAAa,wBAASA,KAAT,EAAb;AACD;;4BAED/D,+BAAW;;AAET,UAAI,KAAKgB,WAAL,CAAiBgD,WAAjB,CAA6BZ,IAA7B,IAAqC,OAAzC,EAAkD;AAChD,aAAK8F,cAAL;AACA,aAAKC,MAAL,CAAY,KAAKrF,IAAjB,EAAuB,KAAKC,KAA5B;AACD;AAEF;;4BAEDmF,2CAAiB;AAAA;;AACf,WAAKtF,cAAL,CAAoBsF,cAApB,GACGvI,IADH,CACQ,oBAAY;AAChB,cAAKyI,WAAL,GAAmBtG,QAAnB;AACD,OAHH,EAGK,eAAO,CAET,CALH;AAMD;;4BAEDuG,+BAAUvF,MAAMC,OAAO;AACrB,WAAK0E,IAAL,GAAY,IAAZ;AACA,WAAKD,OAAL,GAAe,IAAf;AACA,WAAKW,MAAL,CAAYrF,IAAZ,EAAkBC,KAAlB;AACD;;4BAEDoF,yBAAOrF,MAAMC,OAAO;AAAA;;AAElB,WAAKD,IAAL,GAAYA,IAAZ;AACA,WAAKC,KAAL,GAAaA,KAAb;AACA,UAAI3B,SAAS;AACX0B,cAAMA,IADK;AAEXC,eAAOA;AAFI,OAAb;;AAKA,WAAKgF,YAAL,GAAoB,EAApB;;AAEA,WAAKhI,kBAAL,CAAwBoI,MAAxB,CAA+B/G,MAA/B,EACGzB,IADH,CACQ,oBAAY;AAChB,YAAImC,QAAJ,EAAc;AACZ,iBAAKiG,YAAL,GAAoBjG,QAApB;;AAEA,iBAAKiG,YAAL,CAAkBO,OAAlB,CAA0B,mBAAW;AACnCC,oBAAQxF,KAAR,GAAgB,sBAAOA,QAAQ,CAAf,EAAkB,IAAlB,EAAwBI,MAAxB,CAA+B,MAA/B,CAAhB;AACD,WAFD;AAGA,iBAAKD,WAAL,GAAmB,sBAAOH,QAAQ,CAAf,EAAkB,IAAlB,EAAwBI,MAAxB,CAA+B,MAA/B,CAAnB;AACA,iBAAKqF,WAAL,GAAmB,IAAnB;AACD,SARD,MAQO;AACL,iBAAKA,WAAL,GAAmB,4DAAnB;AACD;AAEF,OAdH,EAcK,eAAO;AACR,eAAKA,WAAL,GAAmB,4DAAnB;AACD,OAhBH;AAmBD;;4BAEDC,2CAAiB;AAAA;;AACf,UAAIC,SAAS,KAAKC,SAAd,IAA2B,CAA/B,EAAkC;AAEhC,YAAIC,cAAc;AAChBC,iBAAO,KAAK9F,KADI;AAEhB+F,gBAAM,KAAKhG,IAFK;AAGhBiG,kBAAQL,SAAS,KAAKC,SAAd,CAHQ;AAIhBK,qBAAW,KAAKC;AAJA,SAAlB;;AAOA,YAAI7H,SAAS;AACXwH,uBAAaA;AADF,SAAb;;AAIA,aAAK7I,kBAAL,CAAwBmJ,IAAxB,CAA6B9H,MAA7B,EAAqCzB,IAArC,CAA0C,oBAAY;AACpD,iBAAK6H,OAAL,GAAe,oCAAf;AACA,iBAAKC,IAAL,GAAY,IAAZ;AACA,iBAAKwB,iBAAL,GAAyB,CAAzB;AACA,iBAAKN,SAAL,GAAiB,IAAjB;AACA,iBAAKR,MAAL,CAAY,OAAKrF,IAAjB,EAAuB,OAAKC,KAA5B;AACD,SAND,EAMG,eAAO;AACR,iBAAKyE,OAAL,GAAe,IAAf;AACA,iBAAKC,IAAL,GAAY,oCAAZ;AACD,SATD;AAUD;AAGF;;4BAED0B,+CAAkBC,eAAe;AAAA;;AAC/B,WAAKrJ,kBAAL,CAAwBsJ,OAAxB,CAAgCD,aAAhC,EACGzJ,IADH,CACQ,oBAAY;AAChB,eAAK6H,OAAL,GAAe,sCAAf;AACA,eAAKC,IAAL,GAAY,IAAZ;AACA,eAAKU,MAAL,CAAY,OAAKrF,IAAjB,EAAuB,OAAKC,KAA5B;AAED,OANH,EAMK,eAAO;AACR,eAAKyE,OAAL,GAAe,IAAf;AACA,eAAKC,IAAL,GAAY,sCAAZ;AACD,OATH;AAUD;;4BAED6B,yBAAOC,OAAO;AAAA;;AACZ,UAAIC,OAAOC,SAASC,cAAT,CAAwB,iBAAxB,CAAX;AACA,WAAKC,kBAAL,CAAwBH,KAAKI,SAA7B;AACA,UAAI7G,QAAQ,KAAKkF,SAAL,CAAe,CAAf,EAAkB,CAAlB,IAAuB,CAAnC;AACA,UAAInF,OAAO,KAAKmF,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAX;AACA,UAAI4B,QAAQ,KAAK5B,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAZ;AACA,UAAI6B,UAAU,KAAK7B,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAd;AACA,UAAI8B,SAAS,KAAK9B,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAb;AACA,UAAI+B,YAAY,KAAK/B,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAhB;AACA,UAAIgC,eAAe,KAAKhC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAnB;;AAEA,UAAIiC,WAAW;AACbnH,oBADa;AAEbD,kBAFa;AAGb+G,oBAHa;AAIbC,wBAJa;AAKbC,sBALa;AAMbC,4BANa;AAObC;AAPa,OAAf;;AAUA,WAAKlK,kBAAL,CAAwBoK,oBAAxB,CAA6CD,QAA7C,EACGvK,IADH,CACQ,gBAAQ;AACZ,eAAK6H,OAAL,GAAe,iDAAf;AACA,eAAKC,IAAL,GAAY,IAAZ;AACA,eAAKU,MAAL,CAAYrF,IAAZ,EAAkBC,KAAlB;AACA,YAAIyG,OAAOC,SAASC,cAAT,CAAwB,iBAAxB,CAAX;AACAF,aAAKI,SAAL,GAAiB,EAAjB;AACA,eAAKQ,YAAL,GAAoB,EAApB;AACD,OARH,EAQK,eAAO;AACR,eAAK5C,OAAL,GAAe,IAAf;AACA,eAAKC,IAAL,GAAY,+BAAZ;AACD,OAXH;AAcD;;4BAED4C,+BAAUd,OAAO;AACf,UAAIC,OAAOC,SAASC,cAAT,CAAwB,iBAAxB,CAAX;AACAF,WAAKI,SAAL,GAAiB,EAAjB;AACA,UAAIU,OAAOC,UAAX,EAAuB;AACrB,YAAIC,SAAS,IAAID,UAAJ,EAAb;AACAC,eAAOC,MAAP,GAAgB,UAAUC,CAAV,EAAa;AAC3BlB,eAAKI,SAAL,GAAiBY,OAAOG,MAAxB;AACD,SAFD;AAGAH,eAAOI,UAAP,CAAkBrB,MAAM,CAAN,CAAlB;AACD,OAND,MAMO;AACLsB,cAAM,+CAAN;AACD;AACF;;4BAEDlB,iDAAmB9D,MAAM;AACvB,UAAIiF,eAAejF,KAAKkF,KAAL,CAAW,SAAX,CAAnB;AACA,UAAIC,QAAQ,EAAZ;AACA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIH,aAAaI,MAAjC,EAAyCD,GAAzC,EAA8C;AAC5C,YAAIlE,OAAO+D,aAAaG,CAAb,EAAgBF,KAAhB,CAAsB,GAAtB,CAAX;AACA,YAAII,OAAO,EAAX;AACA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIrE,KAAKmE,MAAzB,EAAiCE,GAAjC,EAAsC;AACpCD,eAAKlH,IAAL,CAAU8C,KAAKqE,CAAL,CAAV;AACD;AACDJ,cAAM/G,IAAN,CAAWkH,IAAX;AACD;AACD,WAAKlD,SAAL,GAAiB+C,KAAjB;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCnMUK,sBAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCAAC,yBAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCAAC,6BAAAA;;;;;iCAMXC,yBAAOC,OAAO;AACZ,aAAO,sBAAOA,KAAP,EAActI,MAAd,CAAqB,cAArB,CAAP;AACD;;;;;;;;;;;;;;;;;;MCVUuI,mCAAAA;;;;;uCACXF,yBAAOC,OAAO;AACZ,aAAOA,MAAMvK,OAAN,CAAc,iBAAd,EAAiC,QAAjC,CAAP;AACD;;;;;;;;;;;;;;;;;;MCHUyK,6BAAAA;;;;;iCAEXH,yBAAOC,OAAO;AACZ,UAAIA,KAAJ,EACE,OAAOG,QAAQC,OAAR,CAAgBJ,KAAhB,CAAP;AACH;;;;;;;;;;;;;;;;;;MCLUK,uBAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCQAC,uBAAAA,uBADZ,oJAGE,gCAAS,EAACC,oBAAoB,8BAAYC,MAAjC,EAAT;AAED,0BAAY3N,WAAZ,EAAyB0B,WAAzB,EAAqCkM,UAArC,EAAiDxN,MAAjD,EAAyD;AAAA;;AAAA,WAHzDyN,WAGyD,GAH3C,EAG2C;;AAAA;;AACvD,WAAKzN,MAAL,GAAcA,MAAd;AACA,WAAKsB,WAAL,GAAmBA,WAAnB;AACA,WAAKkM,UAAL,GAAkBA,UAAlB;AACA,WAAK5N,WAAL,GAAmBA,WAAnB;AACD;;2BAED8N,mDAAoBC,UAAUC,UAAU;AACtC,WAAKH,WAAL,GAAmBE,SAAStN,IAA5B;AACD;;2BAED6I,2BAAQ;AACN,WAAKtJ,WAAL,CAAiBuJ,SAAjB;AACA,WAAKnJ,MAAL,CAAY+D,eAAZ,CAA4B,MAA5B;AACD;;;;;;;;;;;;;;;;;;;;;MC1BU8J,eAAAA,OAEX,gBAAc;AAAA;;AACZ,SAAKnM,KAAL,GAAa,EAAb;AACA,SAAKoM,KAAL,GAAa,EAAb;AACA,SAAKrM,QAAL,GAAgB,EAAhB;AACA,SAAKsM,GAAL,GAAW,EAAX;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKtK,IAAL,GAAY,EAAZ;AACD;;;;;;;;;;;;;;;;;;MCLUuK,yBAAAA,yBADZ;AAGC,4BAAYC,UAAZ,EAAwB;AAAA;;AACtB,WAAKA,UAAL,GAAkBA,UAAlB;AACD;;6BAED3J,iCAAW7B,QAAQ;AACjB,aAAO,KAAKwL,UAAL,CAAgB7H,GAAhB,CAAoB,cAApB,EAAmC3D,MAAnC,CAAP;AACD;;6BAED8G,2CAAgB;AACd,aAAO,KAAK0E,UAAL,CAAgB7H,GAAhB,CAAoB,wBAApB,CAAP;AACD;;;;;;;;;;;;;MCbS8H;;;;;;;;;;;;;;;;;;;;;;;;;;;MAKCC,qBAAAA,qBADZ;AAGC,wBAAYC,IAAZ,EAAkBb,UAAlB,EAA8B;AAAA;;AAC5B,WAAKa,IAAL,GAAYA,IAAZ;AACA,WAAKb,UAAL,GAAkBA,UAAlB;AACD;;yBAEDc,mCAAa;AACX,UAAMC,gBAAgB;AACpB,wBAAgB,kBADI;;AAGpB,kBAAU;AAHU,OAAtB;AAOA,UAAI,KAAKf,UAAL,CAAgBgB,QAAhB,EAAJ,EAAgC;AAC9BD,sBAAc,eAAd,gBAA2C,KAAKf,UAAL,CAAgBgB,QAAhB,EAA3C;AACD;AACD,aAAO,IAAIC,OAAJ,CAAYF,aAAZ,CAAP;AACD;;yBAEDlI,mBAAIqI,MAAMhM,QAAQ;AAChB,UAAMmG,UAAU;AACd8F,gBAAQ,KADM;AAEdC,iBAAS,KAAKN,UAAL;AAFK,OAAhB;AAIA,aAAO,KAAKD,IAAL,CAAUQ,KAAV,MAAmB,eAAOC,OAA1B,GAAoCJ,IAApC,SAA4CP,GAAGY,SAAH,CAAarM,MAAb,CAA5C,EAAmEmG,OAAnE,EACJ5H,IADI,wBAEJ+N,KAFI,2BAAP;AAGD;;yBAEDC,mBAAIP,MAAiB;AAAA,UAAXQ,IAAW,uEAAJ,EAAI;;AACnB,UAAMrG,UAAU;AACd8F,gBAAQ,KADM;AAEdC,iBAAS,KAAKN,UAAL,EAFK;AAGdY,cAAM,8BAAKA,IAAL;AAHQ,OAAhB;AAKA,aAAO,KAAKb,IAAL,CAAUQ,KAAV,MAAmB,eAAOC,OAA1B,GAAoCJ,IAApC,EAA2C7F,OAA3C,EACJ5H,IADI,wBAEJ+N,KAFI,2BAAP;AAGD;;yBAEDG,qBAAKT,MAAiB;AAAA,UAAXQ,IAAW,uEAAJ,EAAI;;AACpB,UAAMrG,UAAU;AACd8F,gBAAQ,MADM;AAEdC,iBAAS,KAAKN,UAAL,EAFK;;AAIdY,cAAM,8BAAKA,IAAL;AAJQ,OAAhB;AAMA,aAAO,KAAKb,IAAL,CAAUQ,KAAV,MAAmB,eAAOC,OAA1B,GAAoCJ,IAApC,EAA2C7F,OAA3C,EACJ5H,IADI,wBAEJ+N,KAFI,2BAAP;AAGD;;yBAEDI,qCAAaV,MAAiB;AAAA,UAAXQ,IAAW,uEAAJ,EAAI;;AAC5B,aAAO,KAAKb,IAAL,CAAUQ,KAAV,CAAgB,eAAOC,OAAP,GAAe,QAA/B,EAAyC;AAC9CH,gBAAQ,MADsC;AAE9CU,qBAAa,mCAFiC;;AAK9CH,cAAM,kCAAgCA,KAAKzN,QAArC,GAA8C,YAA9C,GAA2DyN,KAAKvN;AALxB,OAAzC,EAOJV,IAPI,CAOC,gBAAQ;AACZoH,eAAOA,KAAKiH,IAAL,EAAP;AACA,eAAOjH,IAAP;AACD,OAVI,EAUH,eAAO;AACP,eAAO3D,GAAP;AACD,OAZI,CAAP;AAcD;;yBAED6K,0BAAOb,MAAM;AACX,UAAM7F,UAAU;AACd8F,gBAAQ,QADM;AAEdC,iBAAS,KAAKN,UAAL;AAFK,OAAhB;AAIA,aAAO,KAAKD,IAAL,CAAUQ,KAAV,MAAmB,eAAOC,OAA1B,GAAoCJ,IAApC,EAA2C7F,OAA3C,EACJ5H,IADI,wBAEJ+N,KAFI,2BAAP;AAGD;;;;;;;;;;;;;;;;;;;;;MCnFUQ,yBAAAA,yBADZ;AAGC,4BAAYtB,UAAZ,EAAwB;AAAA;;AACtB,WAAKA,UAAL,GAAkBA,UAAlB;AACD;;6BAED7I,2BAAQ7D,MAAMkB,QAAQ;AACpB,aAAO,KAAKwL,UAAL,CAAgB7H,GAAhB,CAAoB,eAAgB7E,SAAS,MAAV,GAAoB,OAApB,GAA8B,EAA7C,CAApB,EAAsEkB,MAAtE,CAAP;AACD;;6BAED2D,mBAAIoJ,MAAM;AACR,aAAO,KAAKvB,UAAL,CAAgB7H,GAAhB,CAAoB,eAAeoJ,IAAnC,EACJxO,IADI,CACC;AAAA,eAAQoH,KAAKqH,OAAb;AAAA,OADD,CAAP;AAED;;6BAED/E,2BAAQ8E,MAAM;AACZ,aAAO,KAAKvB,UAAL,CAAgBqB,MAAhB,CAAuB,eAAeE,IAAtC,CAAP;AACD;;6BAEDjF,qBAAKkF,SAAS;AACZ,UAAIA,QAAQD,IAAZ,EAAkB;AAEhB,eAAO,KAAKvB,UAAL,CAAgBe,GAAhB,CAAoB,eAAeS,QAAQD,IAA3C,EAAiD,EAACC,SAASA,OAAV,EAAjD,EACJzO,IADI,CACC;AAAA,iBAAQoH,KAAKqH,OAAb;AAAA,SADD,CAAP;AAED,OAJD,MAIO;AAEL,eAAO,KAAKxB,UAAL,CAAgBiB,IAAhB,CAAqB,YAArB,EAAmC,EAACO,SAASA,OAAV,EAAnC,EACJzO,IADI,CACC;AAAA,iBAAQoH,KAAKqH,OAAb;AAAA,SADD,CAAP;AAED;AACF;;6BAEDC,6BAASF,MAAM;AACb,aAAO,KAAKvB,UAAL,CAAgBiB,IAAhB,CAAqB,eAAeM,IAAf,GAAsB,WAA3C,CAAP;AACD;;6BAEDG,iCAAWH,MAAM;AACf,aAAO,KAAKvB,UAAL,CAAgBqB,MAAhB,CAAuB,eAAeE,IAAf,GAAsB,WAA7C,CAAP;AACD;;;;;;;;;;;ACzCI,MAAM1P,0BAAS;AAEpB+O,aAAS;AAFW,GAAf;;;;;;;;;;;;;;;MCAMe,qBAAAA;;;;;yBAEXrB,+BAAW;AACT,aAAO5C,OAAOkE,YAAP,CAAoB,UAApB,CAAP;AACD;;yBAEDC,+BAAUjC,OAAO;AACflC,aAAOkE,YAAP,CAAoB,UAApB,IAAkChC,KAAlC;AACD;;yBAEDkC,uCAAe;AACbpE,aAAOkE,YAAP,CAAoBG,UAApB,CAA+B,UAA/B;AACD;;;;;;;;;;;;;;;;;;;;;MCRUC,yBAAAA,yBADZ;AAGC,4BAAYhC,UAAZ,EAAwB;AAAA;;AACtB,WAAKA,UAAL,GAAkBA,UAAlB;AACD;;6BAED7H,mBAAI5E,UAAU;AACZ,aAAO,KAAKyM,UAAL,CAAgB7H,GAAhB,CAAoB,eAAe5E,QAAnC,EACJR,IADI,CACC;AAAA,eAAQoH,KAAK/B,OAAb;AAAA,OADD,CAAP;AAED;;6BAEDG,yBAAOhF,UAAU;AACf,aAAO,KAAKyM,UAAL,CAAgBiB,IAAhB,CAAqB,eAAe1N,QAAf,GAA0B,SAA/C,CAAP;AACD;;6BAEDiF,6BAASjF,UAAU;AACjB,aAAO,KAAKyM,UAAL,CAAgBqB,MAAhB,CAAuB,eAAe9N,QAAf,GAA0B,SAAjD,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;MCjBU0O,wBAAAA,wBADZ;AAGC,2BAAYjC,UAAZ,EAAwB;AAAA;;AACtB,WAAKA,UAAL,GAAkBA,UAAlB;AACD;;4BAEDlG,+BAAUtF,QAAQ;AAChB,aAAO,KAAKwL,UAAL,CAAgB7H,GAAhB,CAAoB,aAApB,EAAmC3D,MAAnC,CAAP;AACD;;;;;;;;;;;UCZa0N,SAAAA;UAQAC,aAAAA;AART,WAASD,MAAT,CAAgBhN,QAAhB,EAA0B;AAC/B,QAAIA,SAASgN,MAAT,IAAmB,GAAnB,IAA0BhN,SAASgN,MAAT,GAAkB,GAAhD,EAAqD;AACnD,aAAOhN,SAASkM,IAAT,EAAP;AACD;;AAED,UAAMlM,QAAN;AACD;;AAEM,WAASiN,UAAT,CAAoBC,KAApB,EAA2B;AAChC,QAAI,EAAEA,iBAAiBC,KAAnB,CAAJ,EACE,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,aAAqBA,OAAOJ,KAAP,CAArB;AAAA,KAAZ,CAAP;AACH;;;;;;;;;;;;;;;;;;MCPYK,6BAAAA,6BADZ;AAGC,gCAAYzC,UAAZ,EAAwB;AAAA;;AACtB,WAAKA,UAAL,GAAkBA,UAAlB;AACD;;iCAEDzE,yBAAO/G,QAAQ;AACb,aAAO,KAAKwL,UAAL,CAAgB7H,GAAhB,CAAoB,mBAApB,EAAyC3D,MAAzC,CAAP;AACD;;iCAGD2D,mBAAIoJ,MAAM;AACR,aAAO,KAAKvB,UAAL,CAAgB7H,GAAhB,CAAoB,uBAAuBoJ,IAA3C,EACJxO,IADI,CACC;AAAA,eAAQoH,KAAK6B,WAAb;AAAA,OADD,CAAP;AAED;;iCAEDS,2BAAQ8E,MAAM;AACZ,aAAO,KAAKvB,UAAL,CAAgBqB,MAAhB,CAAuB,uBAAuBE,IAA9C,CAAP;AACD;;iCAEDjF,qBAAKN,aAAa;AAChB,UAAIA,YAAYuF,IAAhB,EAAsB;AAEpB,eAAO,KAAKvB,UAAL,CAAgBe,GAAhB,CAAoB,uBAAuB/E,YAAYuF,IAAvD,EAA6D,EAACvF,aAAaA,WAAd,EAA7D,EACJjJ,IADI,CACC;AAAA,iBAAQoH,KAAK6B,WAAb;AAAA,SADD,CAAP;AAED,OAJD,MAIO;AAEL,eAAO,KAAKgE,UAAL,CAAgBiB,IAAhB,CAAqB,oBAArB,EAA2CjF,YAAYA,WAAvD,CAAP;AACD;AACF;;iCAEDuB,qDAAqBlC,WAAW;AAC9B,aAAO,KAAK2E,UAAL,CAAgBiB,IAAhB,CAAqB,6BAArB,EAAoD5F,SAApD,EACFtI,IADE,CACG;AAAA,eAAQoH,KAAK6B,WAAb;AAAA,OADH,CAAP;AAED;;;;;;;;;;;;;;;;;;;;;MC9BU0G,sBAAAA,sBADZ;AAGC,yBAAY1C,UAAZ,EAAwBV,UAAxB,EAAoClM,WAApC,EAAiDtB,MAAjD,EAAyD;AAAA;;AACvD,WAAKkO,UAAL,GAAkBA,UAAlB;AACA,WAAKV,UAAL,GAAkBA,UAAlB;AACA,WAAKlM,WAAL,GAAmBA,WAAnB;AACD;;0BAIDuP,+BAAW;AAAA;;AACT,UAAI,KAAKrD,UAAL,CAAgBgB,QAAhB,EAAJ,EAAgC;AAC9B,aAAKN,UAAL,CAAgB7H,GAAhB,CAAoB,QAApB,EACGpF,IADH,CACQ,gBAAQ;AACZ,gBAAK6P,OAAL,CAAazI,IAAb;AACA,iBAAOA,IAAP;AACD,SAJH,EAII,eAAO;AACP,iBAAO,gBAAP;AACD,SANH;AAOD,OARD,MAQO;AAEL,aAAKc,SAAL;AACD;AACF;;0BAED2H,2BAAQC,MAAM;AAEZ,WAAKvD,UAAL,CAAgBuC,SAAhB,CAA0BgB,KAAKC,YAA/B;AACA,WAAK1P,WAAL,CAAiBgD,WAAjB,GAA+ByM,IAA/B;AACA,WAAKzP,WAAL,CAAiB2P,eAAjB,GAAmC,IAAnC;AACD;;0BAED9H,iCAAY;AAEV,WAAKqE,UAAL,CAAgBwC,YAAhB;AACA,WAAK1O,WAAL,CAAiBgD,WAAjB,GAA+B,gBAA/B;AACA,WAAKhD,WAAL,CAAiB2P,eAAjB,GAAmC,KAAnC;AACD;;0BAEDhO,mCAAYF,aAAa;AAAA;;AACvB,WAAKoG,SAAL;;AAEA,aAAO,KAAK+E,UAAL,CAAgBkB,YAAhB,CAA6B,QAA7B,EAAuCrM,WAAvC,EACJ9B,IADI,CACC,gBAAQ;AACZ,YAAI8P,KAAKC,YAAT,EAAuB;AACrB,iBAAKF,OAAL,CAAaC,IAAb;AACA,iBAAKG,WAAL,GACGjQ,IADH,CACQ,gBAAQ;AACZ,gBAAIkQ,KAAKxN,IAAT,EAAe;AACboN,mBAAKrN,IAAL,GAAYyN,KAAKxN,IAAjB;AACA,qBAAKmN,OAAL,CAAaC,IAAb;AACAK,uBAASC,MAAT,CAAgB,SAAhB;AACA,qBAAO,8BAAP;AACD,aALD,MAKO;AACL,qBAAKlI,SAAL;AACA,qBAAO,oBAAP;AACD;AACF,WAXH,EAWI,eAAO;AACP,mBAAKA,SAAL;AACA,mBAAO,oBAAP;AACD,WAdH;AAeD,SAjBD,MAiBO;AACL,iBAAKA,SAAL;AACA,iBAAO,oBAAP;AACD;AAEF,OAxBI,EAwBH,eAAO;AACP,eAAKA,SAAL;AACA,eAAO,oBAAP;AACD,OA3BI,CAAP;AA4BD;;0BAED+H,qCAAc;AACZ,aAAO,KAAKhD,UAAL,CAAgB7H,GAAhB,CAAoB,uBAApB,EACJpF,IADI,CACC,gBAAQ;AACZ,eAAOkQ,IAAP;AACD,OAHI,EAGF,eAAO;AACR,eAAO,wBAAP;AACD,OALI,CAAP;AAMD;;0BAEDtN,6BAASd,aAAa;AACpB,aAAO,KAAKmL,UAAL,CAAgBiB,IAAhB,CAAqB,uBAArB,EAA8CpM,WAA9C,EACJ9B,IADI,CACC,gBAAQ;AACZ,eAAO,mCAAP;AACD,OAHI,EAGF,eAAO;AACR,eAAO,2BAAP;AACD,OALI,CAAP;AAOD;;0BAED6C,2BAAQJ,MAAM;AACZ,aAAO,KAAKwK,UAAL,CAAgBiB,IAAhB,CAAqB,yBAArB,EAAgDzL,IAAhD,EACJzC,IADI,CACC,gBAAQ;AACZ,eAAO,iCAAP;AACD,OAHI,EAGH,eAAM;AACN,eAAO,2BAAP;AACD,OALI,CAAP;AAMD;;;;;;;;;;;;;;;;;;;MCxGUqQ,sBAAAA,cAEX,uBAAc;AAAA;;AACZ,SAAKhN,WAAL,GAAmB,gBAAnB;AACA,SAAK2M,eAAL,GAAuB,KAAvB;AACD","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-dependency-injection';\nimport {UserService} from './shared/services/userservice';\n\n@inject(UserService)\nexport class App {\n  \n  constructor(userService) {\n    this.message = 'Hello World!'; // just for unit testing ;)\n    this.userService = userService;\n  }\n  \n  configureRouter(config, router) {\n    config.title = 'Conduit';\n    config.map([\n      //{route: ['', 'home'], moduleId: 'components/home/homecomponent', name: 'home', title: 'Home'},\n      {route: ['login'], moduleId: 'components/auth/authcomponent', name: 'login', title: 'Sign in'},\n      {route: ['register'], moduleId: 'components/auth/authcomponent', name:'register', title: 'Sign up'},\n      {route: ['', 'home'], moduleId: 'components/home/homecomponent', name:'home', title: 'home'},\n      {route: ['updatebalance'], moduleId: 'components/updatebalance/updatebalance', name:'updatebalance', title: 'updatebalance'},\n      {route: ['reports'], moduleId: 'components/report/reportcomponent', name:'reports', title: 'reports'}\n    ]);\n    \n    this.router = router;\n  }\n  \n  attached() {\n    //this.userService.populate();\n  }\n}\n","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources')\r\n    .feature('shared')\r\n    .plugin('aurelia-validation');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","export function configure(config) {\r\n  config.globalResources(['./value-converters/date']);\r\n}\r\n","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n","import {inject} from 'aurelia-dependency-injection';\nimport {Router, activationStrategy} from 'aurelia-router';\nimport {ValidationControllerFactory, ValidationRules} from 'aurelia-validation';\nimport {UserService} from '../../shared/services/userservice';\nimport {SharedState} from '../../shared/state/sharedstate';\nimport {TransactionService} from '../../shared/services/transactionservice';\n\n@inject(TransactionService, UserService, SharedState, Router, ValidationControllerFactory)\nexport class AuthComponent {\n  type = '';\n  username = '';\n  email = '';\n  password = '';\n  errors = null;\n  errorMsg = null;\n  roles = [];\n  \n  constructor(transactionService, userService, sharedState, router, controllerFactory) {\n    //this.type = 'login'\n    this.transactionService = transactionService;\n    this.userService = userService;\n    this.sharedState = sharedState;\n    this.router = router;\n    this.controller = controllerFactory.createForCurrentScope();\n    \n    ValidationRules\n      .ensure('email').required().email()\n      .ensure('password').required().minLength(6)\n      .ensure('confirmPassword').required().when((auth) => auth.type === 'register')\n      .on(this);\n  }\n  \n  determineActivationStrategy() {\n    return activationStrategy.replace;\n  }\n  \n  activate(params, routeConfig) {\n    this.type = routeConfig.name;\n    this.roles = [\n      {\n        name: \"ADMIN\",\n        id: 1\n      },\n      {\n        name: \"USER\",\n        id: 2\n      }\n    ]\n  }\n  \n  get canSave() {\n    if (this.type == 'login') {\n      return this.email !== '' && this.password !== '';\n    } else {\n      return this.email !== '' && this.password !== '' && this.confirmPassword === this.password;\n    }\n  }\n  \n  submit() {\n    this.errors = null;\n    this.errorMsg = null;\n    this.successMsg = null;\n    if (this.type == 'login') {\n      const credentials = {\n        username: this.email,\n        password: this.password,\n        grant_type:\"password\"\n      };\n      this.userService.attemptAuth(credentials)\n      .then(response => {\n        console.log(response)\n        if(response=='User logged in successfully.') {\n          this.failLogin = null;\n        } else {\n          this.failLogin = 'Sorry, an error occured in during login.';\n        }\n      },err => {\n        this.failLogin = 'Sorry, an error occured in during login.';\n      });\n    } else {\n      const credentials = {\n        Email: this.email,\n        Password: this.password,\n        ConfirmPassword: this.confirmPassword,\n        //Role : this.selectedRoleId\n      };\n\n      const role = {\n        Email: this.email,\n        Role : this.selectedRoleId\n      }\n\n      this.userService.register(credentials)\n      .then(response => {\n        if(response == \"User registration was successful.\"){\n          this.userService.addRole(role)\n          .then(response => {\n            if(response == \"User role was added successful.\"){\n              \n              this.router.navigateToRoute('home');\n            } else {\n              this.errorMsg = response;\n\n            }\n          });\n\n        } else {\n          this.errorMsg = response;\n\n        }\n      });\n\n    }\n    \n  }\n}\n","import {BindingEngine} from 'aurelia-framework';\nimport {inject} from 'aurelia-dependency-injection';\nimport {SharedState} from '../../shared/state/sharedstate';\nimport {AccountService} from \"../../shared/services/accountservice\";\nimport moment from 'moment';\n\n@inject(SharedState, BindingEngine,AccountService)\nexport class AccountComponent {\n  accounts = [];\n  \n  constructor(sharedState, bindingEngine, accountService) {\n    this.sharedState = sharedState;\n    this.bindingEngine = bindingEngine;\n    this.accountService = accountService;\n    this.year = moment().year();\n    this.month = moment().month();\n  }\n\n  attached() {\n    if(this.sharedState.currentUser.role=='USER'){\n      this.getBalance(this.year, this.month);\n    }\n    \n  }\n  \n  getBalance(year, month) {\n    if(year && month) {\n      let params = {\n        year: year,\n        month: month\n      };\n  \n      this.accountService.getBalance(params)\n        .then(response => {\n          this.accounts = response;\n          this.monthString =  moment(month+1, 'MM').format('MMMM');\n        },err => {\n          console.log(err)\n        })\n    }\n    \n  }\n\n}\n","import {inject} from 'aurelia-dependency-injection';\r\nimport {ArticleService} from \"../../shared/services/articleservice\";\r\n\r\n@inject(ArticleService)\r\nexport class ProfileArticleComponent {\r\n  articles = [];\r\n  pageNumber;\r\n  totalPages;\r\n  currentPage = 1;\r\n  limit = 10;\r\n  \r\n  constructor(as) {\r\n    this.articleService = as;\r\n  }\r\n  \r\n  activate(params, routeConfig) {\r\n    this.username = params.name;\r\n    return this.getArticles();\r\n  }\r\n  \r\n  getArticles() {\r\n    let queryParams = {\r\n      limit: this.limit,\r\n      offset: this.limit * (this.currentPage - 1),\r\n      author: this.username\r\n    };\r\n    return this.articleService.getList('all', queryParams)\r\n      .then(response => {\r\n        this.articles.splice(0);\r\n        this.articles.push(...response.articles)\r\n  \r\n        // Used from http://www.jstips.co/en/create-range-0...n-easily-using-one-line/\r\n        this.totalPages = Array.from(new Array(Math.ceil(response.articlesCount / this.limit)), (val, index) => index + 1);\r\n      })\r\n  }\r\n  \r\n  setPageTo(pageNumber) {\r\n    this.currentPage = pageNumber;\r\n    this.getArticles();\r\n  }\r\n}\r\n","import {inject} from 'aurelia-dependency-injection';\r\nimport {SharedState} from '../../shared/state/sharedstate';\r\nimport {UserService} from \"../../shared/services/userservice\";\r\nimport {ProfileService} from \"../../shared/services/profileservice\";\r\n\r\n@inject(SharedState, ProfileService)\r\nexport class ProfileComponent {\r\n  \r\n  constructor(sharedState, ps) {\r\n    this.sharedState = sharedState;\r\n    this.profileService = ps;\r\n  }\r\n  \r\n  configureRouter(config, router) {\r\n    config.map([\r\n      {route: [''], moduleId: 'components/profile/profilearticlecomponent', name: 'profilearticle', title: 'Profile'},\r\n      {route: ['favorites'], moduleId: 'components/profile/profilefavoritescomponent', name: 'profilefavorites', title: 'Profile'}\r\n    ]);\r\n    \r\n    this.router = router;\r\n  }\r\n  \r\n  activate(params, routeConfig) {\r\n    this.username = params.name;\r\n    return this.profileService.get(this.username)\r\n      .then(profile => this.profile = profile)\r\n  }\r\n  \r\n  get isUser() {\r\n    return this.profile.username === this.sharedState.currentUser.username;\r\n  }\r\n  \r\n  onToggleFollowing() {\r\n    this.profile.following = !this.profile.following;\r\n    if (this.profile.following)\r\n      this.profileService.follow(this.profile.username);\r\n    else\r\n      this.profileService.unfollow(this.profile.username);\r\n  }\r\n}\r\n","import {inject} from 'aurelia-dependency-injection';\r\nimport {ArticleService} from \"../../shared/services/articleservice\";\r\n\r\n@inject(ArticleService)\r\nexport class ProfileFavoritesComponent {\r\n  articles = [];\r\n  pageNumber;\r\n  totalPages;\r\n  currentPage = 1;\r\n  limit = 10;\r\n  \r\n  constructor(as) {\r\n    this.articleService = as;\r\n  }\r\n  \r\n  activate(params, routeConfig) {\r\n    this.username = params.name;\r\n    return this.getArticles();\r\n  }\r\n  \r\n  getArticles() {\r\n    let queryParams = {\r\n      limit: this.limit,\r\n      offset: this.limit * (this.currentPage - 1),\r\n      favorited: this.username\r\n    };\r\n    return this.articleService.getList('all', queryParams)\r\n      .then(response => {\r\n        this.articles.splice(0);\r\n        this.articles.push(...response.articles)\r\n        \r\n        // Used from http://www.jstips.co/en/create-range-0...n-easily-using-one-line/\r\n        this.totalPages = Array.from(new Array(Math.ceil(response.articlesCount / this.limit)), (val, index) => index + 1);\r\n      })\r\n  }\r\n  \r\n  setPageTo(pageNumber) {\r\n    this.currentPage = pageNumber;\r\n    this.getArticles();\r\n  }\r\n}\r\n","import {BindingEngine} from 'aurelia-framework';\nimport {inject} from 'aurelia-dependency-injection';\nimport {SharedState} from '../../shared/state/sharedstate';\nimport {ReportService} from \"../../shared/services/reportservice\";\nimport {Chart} from 'node_modules/chart.js/dist/Chart.js';\nimport moment from 'moment';\nimport lodash from 'lodash';\n\n@inject(SharedState, BindingEngine,ReportService)\nexport class ReportComponent {\n  reportdata = null;\n  labels = [\n    \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n    \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n  ]\n\n  //accountNames = ['RandD', 'Canteen', 'CEOCar', 'Marketing', 'ParkingFines']\n\n  lineOptions = {\n    title:{\n      display:true,\n      text:`Monthly Account Balances of year ${this.year}`\n    },\n    tooltips: {\n      mode: 'index',\n      intersect: false,\n    },\n    hover: {\n      mode: 'nearest',\n      intersect: true\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: true,\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Month'\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          display: true,\n        },\n        ticks: {\n          beginAtZero: true\n        },\n        scaleLabel: {\n          display: true,\n          labelString: 'Amount'\n        }\n      }],\n    },\n  };\n  \n  constructor(sharedState, bindingEngine, reportService) {\n    this.sharedState = sharedState;\n    this.bindingEngine = bindingEngine;\n    this.reportService = reportService;\n    this.year = moment().year();\n  }\n\n  attached() {\n    if(this.sharedState.currentUser.role=='ADMIN'){\n      this.getReport(true);\n    }\n    \n  }\n  \n  getReport(isInitialLoading) {\n    this.reportdata = null\n\n    let params = {\n      year: this.year\n    };\n\n\n    this.reportService.getReport(params)\n      .then(response => {\n        this.reportdata = response;\n\n        this.lineData = {\n          labels: this.labels,\n          datasets: [\n            {\n              label: 'R&D',\n              data: response['RandD'],\n              backgroundColor: 'rgba(255,0,0,1)',\n              borderColor: 'rgba(255,0,0,1)',\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Canteen',\n              data: response['Canteen'],\n              backgroundColor: 'rgba(0, 255, 0, 0.2)',\n              borderColor: 'rgba(0, 255, 0, 1)',\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'CEO’s car',\n              data: response['CEOCar'],\n              backgroundColor: 'rgba(0, 0, 255, 0.2)',\n              borderColor: 'rgba(0,0,255,1)',\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Marketing',\n              data: response['Marketing'],\n              backgroundColor: 'rgba(54, 500, 235, 0.2)',\n              borderColor: 'rgba(54, 500, 235, 1)',\n              borderWidth: 1,\n              fill: false,\n            },\n            {\n              label: 'Parking fines',\n              data: response['ParkingFines'],\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              borderColor: 'rgba(255,99,132,1)',\n              borderWidth: 1,\n              fill: false,\n            }\n          ]\n        };\n\n        this.lineOptions.title.text=`Monthly Account Balances of year ${this.year}`;\n        let ctx = this.chart;  \n\n        var myChart = new Chart(ctx, {\n          type: 'line',\n          data: this.lineData,\n          options: this.lineOptions,\n        });\n        if(!isInitialLoading) {\n          this.success = \"The chart was generated successfully\";\n          this.fail = null;\n        }\n      },err => {\n        this.success = null;\n        this.fail = \"Error occured wgile generating the chart\";\n      });\n  }\n\n}\n","import {inject} from 'aurelia-dependency-injection';\r\nimport {Router} from 'aurelia-router';\r\nimport {UserService} from '../../shared/services/userservice';\r\nimport {SharedState} from '../../shared/state/sharedstate';\r\n\r\n@inject(UserService, SharedState, Router)\r\nexport class SettingsComponent {\r\n  \r\n  constructor(userService, sharedState, router) {\r\n    this.userService = userService;\r\n    this.sharedState = sharedState;\r\n    this.router = router;\r\n  }\r\n  \r\n  update() {\r\n    this.userService.update(this.sharedState.currentUser);\r\n  }\r\n  \r\n  logout() {\r\n    this.userService.purgeAuth();\r\n    this.router.navigateToRoute('home');\r\n  }\r\n}\r\n","import { inject } from 'aurelia-dependency-injection';\nimport { json } from 'aurelia-fetch-client';\nimport { TransactionService } from \"../../shared/services/transactionservice\";\nimport { SharedState } from '../../shared/state/sharedstate';\nimport { AccountService } from \"../../shared/services/accountservice\";\nimport moment from 'moment';\n\n@inject(TransactionService, AccountService, SharedState)\nexport class UpdateBalance {\n  transactions = [];\n  months = [\n    { id: 0, name: \"January\" },\n    { id: 1, name: \"February\" },\n    { id: 2, name: \"March\" },\n    { id: 3, name: \"April\" },\n    { id: 4, name: \"May\" },\n    { id: 5, name: \"June\" },\n    { id: 6, name: \"July\" },\n    { id: 7, name: \"August\" },\n    { id: 8, name: \"September\" },\n    { id: 9, name: \"October\" },\n    { id: 10, name: \"November\" },\n    { id: 11, name: \"December\" }\n  ]\n  excelData = [];\n\n  constructor(transactionService, accountService, sharedState) {\n    this.transactionService = transactionService;\n    this.accountService = accountService;\n    this.sharedState = sharedState;\n    this.success = false;\n    this.fail = false;\n    this.year = moment().year();\n    this.month = moment().month();\n  }\n\n  attached() {\n\n    if (this.sharedState.currentUser.role == 'ADMIN') {\n      this.getAllAccounts();\n      this.getAll(this.year, this.month);\n    }\n\n  }\n\n  getAllAccounts() {\n    this.accountService.getAllAccounts()\n      .then(response => {\n        this.accountList = response;\n      }, err => {\n        \n      });\n  }\n\n  getAllBtn(year, month) {\n    this.fail = null;\n    this.success = null;\n    this.getAll(year, month)\n  }\n\n  getAll(year, month) {\n\n    this.year = year;\n    this.month = month;\n    let params = {\n      year: year,\n      month: month\n    };\n\n    this.transactions = []\n\n    this.transactionService.getAll(params)\n      .then(response => {\n        if (response) {\n          this.transactions = response;\n\n          this.transactions.forEach(element => {\n            element.month = moment(month + 1, 'MM').format('MMMM');\n          });\n          this.monthString = moment(month + 1, 'MM').format('MMMM');\n          this.failLoading = null;\n        } else {\n          this.failLoading = 'Sorry, an error occured in loading the accouting balances.';\n        }\n\n      }, err => {\n        this.failLoading = 'Sorry, an error occured in loading the accouting balances.';\n      });\n\n\n  }\n\n  addTransaction() {\n    if (parseInt(this.newAmount) > 0) {\n      //if(1){\n      let transaction = {\n        Month: this.month,\n        Year: this.year,\n        Amount: parseInt(this.newAmount),\n        AccountId: this.selectedAccountId\n      }\n\n      let params = {\n        transaction: transaction\n      }\n\n      this.transactionService.save(params).then(response => {\n        this.success = \"The balance was added successfully\";\n        this.fail = null;\n        this.selectedAccountId = 1;\n        this.newAmount = null;\n        this.getAll(this.year, this.month)\n      }, err => {\n        this.success = null;\n        this.fail = \"The account balance failed saving.\";\n      });\n    }\n\n\n  }\n\n  deleteTransaction(transactionId) {\n    this.transactionService.destroy(transactionId)\n      .then(response => {\n        this.success = \"The balance was removed successfully\";\n        this.fail = null;\n        this.getAll(this.year, this.month)\n\n      }, err => {\n        this.success = null;\n        this.fail = \"The account balance failed removing.\";\n      })\n  }\n\n  upload(files) {\n    let disp = document.getElementById('fileDisplayArea');\n    this.convertTextToArray(disp.innerText);\n    let month = this.excelData[0][1] - 1;\n    let year = this.excelData[1][1];\n    let RandD = this.excelData[3][1];\n    let Canteen = this.excelData[4][1];\n    let CEOCar = this.excelData[5][1];\n    let Marketing = this.excelData[6][1];\n    let ParkingFines = this.excelData[7][1];\n\n    let postDate = {\n      month,\n      year,\n      RandD,\n      Canteen,\n      CEOCar,\n      Marketing,\n      ParkingFines\n    }\n\n    this.transactionService.saveExcelBalanceData(postDate)\n      .then(data => {\n        this.success = 'The account balances were updated successfully.';\n        this.fail = null;\n        this.getAll(year, month);\n        let disp = document.getElementById('fileDisplayArea');\n        disp.innerText = \"\";\n        this.fileLocation = [];\n      }, err => {\n        this.success = null;\n        this.fail = 'The account failed uploading.';\n      });\n\n\n  }\n\n  getAsText(files) {\n    let disp = document.getElementById('fileDisplayArea');\n    disp.innerText = '';\n    if (window.FileReader) {\n      let reader = new FileReader();\n      reader.onload = function (e) {\n        disp.innerText = reader.result;\n      }\n      reader.readAsText(files[0]);\n    } else {\n      alert('FileReader are not supported in this browser.');\n    }\n  }\n\n  convertTextToArray(text) {\n    let allTextLines = text.split(/\\r\\n|\\n/);\n    let lines = [];\n    for (let i = 0; i < allTextLines.length; i++) {\n      let data = allTextLines[i].split(',');\n      let tarr = [];\n      for (let j = 0; j < data.length; j++) {\n        tarr.push(data[j]);\n      }\n      lines.push(tarr);\n    }\n    this.excelData = lines;\n  }\n\n}\n","import {bindable} from 'aurelia-framework';\r\n\r\nexport class AccountList {\r\n  @bindable accounts;\r\n}\r\n\r\n","import {bindable} from 'aurelia-framework';\r\n\r\nexport class AccountPreview {\r\n  @bindable account;\r\n  \r\n}\r\n","import moment from 'moment';\r\n\r\nexport class DateValueConverter {\r\n  /*\r\n  * \"2017-07-27T07:01:19.644Z\"\r\n  * into\r\n  * \"July 27, 2017\"\r\n  */\r\n  toView(value) {\r\n    return moment(value).format('MMMM D, YYYY')\r\n  }\r\n}\r\n\r\n","export class FormatHtmlValueConverter {\r\n  toView(value) {\r\n    return value.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\r\n  }\r\n}\r\n\r\n","export class KeysValueConverter {\r\n  \r\n  toView(value) {\r\n    if (value)\r\n      return Reflect.ownKeys(value);\r\n  }\r\n  \r\n}\r\n","export class FooterLayout {}\r\n","import {inject} from 'aurelia-dependency-injection';\nimport {bindable, bindingMode} from 'aurelia-framework';\nimport {Router, activationStrategy} from 'aurelia-router';\nimport {SharedState} from '../state/sharedstate';\nimport {JwtService} from '../services/jwtservice';\nimport {UserService} from '../services/userservice';\n\n@inject(UserService,SharedState, JwtService, Router)\nexport class HeaderLayout {\n  activeRoute = '';\n  @bindable({defaultBindingMode: bindingMode.twoWay}) routerConfig;\n  \n  constructor(userService, sharedState,jwtService, router) {\n    this.router = router;\n    this.sharedState = sharedState;\n    this.jwtService = jwtService;\n    this.userService = userService;\n  }\n  \n  routerConfigChanged(newValue, oldValue) {\n    this.activeRoute = newValue.name;\n  }\n\n  logout(){\n    this.userService.purgeAuth();\n    this.router.navigateToRoute('home');\n  }\n}\n","export class User {\n  \n  constructor() {\n    this.email = '';\n    this.token = '';\n    this.username = '';\n    this.bio = '';\n    this.image = '';\n    this.role = '';\n  }\n  \n}\n","import {inject} from 'aurelia-dependency-injection';\nimport {ApiService} from './apiservice';\n\n@inject(ApiService)\nexport class AccountService {\n\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  \n  getBalance(params) {\n    return this.apiService.get('/api/Balance',params)\n  }\n\n  getAllAccounts(){\n    return this.apiService.get('/api/BusinessAccounts/')\n  }\n  \n\n}\n","import {config} from './config';\nimport {HttpClient, json} from 'aurelia-fetch-client';\nimport {inject} from 'aurelia-dependency-injection';\nimport * as qs from 'querystringify';\nimport {JwtService} from './jwtservice';\nimport {status, parseError} from './servicehelper';\n\n@inject(HttpClient, JwtService)\nexport class ApiService {\n  \n  constructor(http, jwtService) {\n    this.http = http;\n    this.jwtService = jwtService;\n  }\n  \n  setHeaders() {\n    const headersConfig = {\n      'Content-Type': 'application/json',\n      //'Content-Type':'application/x-www-form-urlencoded',\n      'Accept': 'application/json',\n      //'Access-Control-Allow-Headers': '*',\n      //'Access-Control-Allow-Origin': '*'\n    };\n    if (this.jwtService.getToken()) {\n      headersConfig['Authorization'] = `Bearer ${this.jwtService.getToken()}`;\n    }\n    return new Headers(headersConfig);\n  }\n\n  get(path, params) {\n    const options = {\n      method: 'GET',\n      headers: this.setHeaders()\n    };\n    return this.http.fetch(`${config.api_url}${path}?${qs.stringify(params)}`,options)\n      .then(status)\n      .catch(parseError)\n  }\n \n  put(path, body = {}) {\n    const options = {\n      method: 'PUT',\n      headers: this.setHeaders(),\n      body: json(body)\n    };\n    return this.http.fetch(`${config.api_url}${path}`,options)\n      .then(status)\n      .catch(parseError)\n  }\n  \n  post(path, body = {}) {\n    const options = {\n      method: 'POST',\n      headers: this.setHeaders(),\n      //mode: \"no-cors\",\n      body: json(body)\n    };\n    return this.http.fetch(`${config.api_url}${path}`,options)\n      .then(status)\n      .catch(parseError)\n  }\n\n  postForLogin(path, body = {}) {\n    return this.http.fetch(config.api_url+'/token', {\n      method: 'POST',\n      contentType: 'application/x-www-form-urlencoded',\n      //crossDomain: true,\n      //mode: 'cors',\n      body: 'grant_type=password&userName='+body.username+'&password='+body.password\n    })\n      .then(data => {\n        data = data.json()\n        return data;\n      },err => {\n        return err;\n      });\n\n  }\n  \n  delete(path) {\n    const options = {\n      method: 'DELETE',\n      headers: this.setHeaders()\n    };\n    return this.http.fetch(`${config.api_url}${path}`,options)\n      .then(status)\n      .catch(parseError)\n  }\n}\n","import {inject} from 'aurelia-dependency-injection';\r\nimport {ApiService} from './apiservice';\r\n\r\n@inject(ApiService)\r\nexport class ArticleService {\r\n\r\n  constructor(apiService) {\r\n    this.apiService = apiService;\r\n  }\r\n  \r\n  getList(type, params) {\r\n    return this.apiService.get('/articles' + ((type === 'feed') ? '/feed' : ''), params)\r\n  }\r\n  \r\n  get(slug) {\r\n    return this.apiService.get('/articles/' + slug)\r\n      .then(data => data.article)\r\n  }\r\n  \r\n  destroy(slug) {\r\n    return this.apiService.delete('/articles/' + slug)\r\n  }\r\n  \r\n  save(article) {\r\n    if (article.slug) {\r\n      // If we're updating an existing article\r\n      return this.apiService.put('/articles/' + article.slug, {article: article})\r\n        .then(data => data.article)\r\n    } else {\r\n      // Otherwise, create a new article\r\n      return this.apiService.post('/articles/', {article: article})\r\n        .then(data => data.article)\r\n    }\r\n  }\r\n  \r\n  favorite(slug) {\r\n    return this.apiService.post('/articles/' + slug + '/favorite')\r\n  }\r\n  \r\n  unfavorite(slug) {\r\n    return this.apiService.delete('/articles/' + slug + '/favorite')\r\n  }\r\n  \r\n}\r\n","export const config = {\n  //api_url: 'https://abvwebapi.azurewebsites.net'\n  api_url: 'http://localhost:53046'\n}\n","export class JwtService {\r\n  \r\n  getToken() {\r\n    return window.localStorage['jwtToken'];\r\n  }\r\n  \r\n  saveToken(token) {\r\n    window.localStorage['jwtToken'] = token;\r\n  }\r\n  \r\n  destroyToken() {\r\n    window.localStorage.removeItem('jwtToken');\r\n  }\r\n  \r\n}\r\n","import {inject} from 'aurelia-dependency-injection';\r\nimport {ApiService} from './apiservice';\r\n\r\n@inject(ApiService)\r\nexport class ProfileService {\r\n\r\n  constructor(apiService) {\r\n    this.apiService = apiService;\r\n  }\r\n  \r\n  get(username) {\r\n    return this.apiService.get('/profiles/' + username)\r\n      .then(data => data.profile)\r\n  }\r\n  \r\n  follow(username) {\r\n    return this.apiService.post('/profiles/' + username + '/follow')\r\n  }\r\n  \r\n  unfollow(username) {\r\n    return this.apiService.delete('/profiles/' + username + '/follow')\r\n  }\r\n}\r\n","import {inject} from 'aurelia-dependency-injection';\nimport {ApiService} from './apiservice';\n\n@inject(ApiService)\nexport class ReportService {\n\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  \n  getReport(params) {\n    return this.apiService.get('/api/Report', params)\n  }\n}\n","export function status(response) {\n  if (response.status >= 200 && response.status < 400) {\n    return response.json();\n  }\n  \n  throw response;\n}\n\nexport function parseError(error) {\n  if (!(error instanceof Error))\n    return new Promise((resolve, reject) => reject(error))\n}\n","import {inject} from 'aurelia-dependency-injection';\nimport {ApiService} from './apiservice';\n\n@inject(ApiService)\nexport class TransactionService {\n\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n\n  getAll(params) { //year and month\n    return this.apiService.get('/api/Transactions', params);\n  }\n  \n\n  get(slug) {\n    return this.apiService.get('/api/transactions/' + slug)\n      .then(data => data.transaction)\n  }\n  \n  destroy(slug) {\n    return this.apiService.delete('/api/transactions/' + slug)\n  }\n  \n  save(transaction) {\n    if (transaction.slug) {\n      // If we're updating an existing transaction\n      return this.apiService.put('/api/transactions/' + transaction.slug, {transaction: transaction})\n        .then(data => data.transaction)\n    } else {\n      // Otherwise, create a new transaction\n      return this.apiService.post('/api/transactions/', transaction.transaction)\n    }\n  }\n  \n  saveExcelBalanceData(excelData) {\n    return this.apiService.post('/api/transactions/excelData', excelData)\n        .then(data => data.transaction)\n  }\n  \n}\n","import { inject } from 'aurelia-dependency-injection';\nimport { ApiService } from './apiservice';\nimport { JwtService } from './jwtservice';\nimport { User } from '../models/user';\nimport { SharedState } from '../state/sharedstate';\nimport {Router, activationStrategy} from 'aurelia-router';\n\n@inject(ApiService, JwtService, SharedState,Router)\nexport class UserService {\n\n  constructor(apiService, jwtService, sharedState, router) {\n    this.apiService = apiService;\n    this.jwtService = jwtService;\n    this.sharedState = sharedState;\n  }\n\n  // Verify JWT in localstorage with server & load user's info.\n  // This runs once on application startup.\n  populate() {\n    if (this.jwtService.getToken()) {\n      this.apiService.get('/token')\n        .then(data => {\n          this.setAuth(data)\n          return data;\n        },err => {\n          return \"Error occured.\";\n        })\n    } else {\n      // Remove any potential remnants of previous auth states\n      this.purgeAuth();\n    }\n  }\n\n  setAuth(user) {\n    // Save JWT sent from server in localstorage\n    this.jwtService.saveToken(user.access_token);\n    this.sharedState.currentUser = user;\n    this.sharedState.isAuthenticated = true;\n  }\n\n  purgeAuth() {\n    // Remove JWT from localstorage\n    this.jwtService.destroyToken();\n    this.sharedState.currentUser = new User();\n    this.sharedState.isAuthenticated = false;\n  }\n\n  attemptAuth(credentials) {\n    this.purgeAuth();\n\n    return this.apiService.postForLogin('/token', credentials)\n      .then(user => {\n        if (user.access_token) {\n          this.setAuth(user);\n          this.getUserInfo()\n            .then(info => {\n              if (info.Role) {\n                user.role = info.Role\n                this.setAuth(user);\n                location.assign('/#/home');\n                return \"User logged in successfully.\";\n              } else {\n                this.purgeAuth();\n                return \"User login failed.\";\n              }\n            },err => {\n              this.purgeAuth();\n              return \"User login failed.\";\n            });\n        } else {\n          this.purgeAuth();\n          return \"User login failed.\";\n        }\n\n      },err => {\n        this.purgeAuth();\n        return \"User login failed.\";\n      });\n  }\n\n  getUserInfo() {\n    return this.apiService.get('/api/Account/UserInfo')\n      .then(info => {\n        return info;\n      }, err => {\n        return \"User reterival failed.\";\n      });\n  }\n\n  register(credentials) {\n    return this.apiService.post('/api/Account/Register', credentials)\n      .then(data => {\n        return \"User registration was successful.\";\n      }, err => {\n        return \"User registration failed.\";\n      });\n\n  }\n\n  addRole(role) {\n    return this.apiService.post('/api/Account/AssignRole', role)\n      .then(data => {\n        return \"User role was added successful.\";\n      },err=> {\n        return \"User role addtion failed.\";\n      });\n  }\n\n\n}\n","import {User} from '../models/user';\r\n\r\nexport class SharedState {\r\n  \r\n  constructor() {\r\n    this.currentUser = new User();\r\n    this.isAuthenticated = false;\r\n  }\r\n}\r\n"],"sourceRoot":".."}